/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AdminRouteImport } from './routes/_admin/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppCarrinhoImport } from './routes/_app/carrinho'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin/index'
import { Route as AdminAdminVendasIndexImport } from './routes/_admin/admin/vendas/index'
import { Route as AdminAdminProdutosIndexImport } from './routes/_admin/admin/produtos/index'
import { Route as AdminAdminCategoriasIndexImport } from './routes/_admin/admin/categorias/index'
import { Route as AdminAdminVendasNovaImport } from './routes/_admin/admin/vendas/nova'
import { Route as AdminAdminVendasVendaIdImport } from './routes/_admin/admin/vendas/$vendaId'
import { Route as AdminAdminProdutosNovoImport } from './routes/_admin/admin/produtos/novo'
import { Route as AdminAdminProdutosProdutoIdImport } from './routes/_admin/admin/produtos/$produtoId'
import { Route as AdminAdminCategoriasNovoImport } from './routes/_admin/admin/categorias/novo'
import { Route as AdminAdminCategoriasCategoriaIdImport } from './routes/_admin/admin/categorias/$categoriaId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCarrinhoRoute = AppCarrinhoImport.update({
  id: '/carrinho',
  path: '/carrinho',
  getParentRoute: () => AppRouteRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminVendasIndexRoute = AdminAdminVendasIndexImport.update({
  id: '/admin/vendas/',
  path: '/admin/vendas/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminProdutosIndexRoute = AdminAdminProdutosIndexImport.update({
  id: '/admin/produtos/',
  path: '/admin/produtos/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminCategoriasIndexRoute = AdminAdminCategoriasIndexImport.update({
  id: '/admin/categorias/',
  path: '/admin/categorias/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminVendasNovaRoute = AdminAdminVendasNovaImport.update({
  id: '/admin/vendas/nova',
  path: '/admin/vendas/nova',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminVendasVendaIdRoute = AdminAdminVendasVendaIdImport.update({
  id: '/admin/vendas/$vendaId',
  path: '/admin/vendas/$vendaId',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminProdutosNovoRoute = AdminAdminProdutosNovoImport.update({
  id: '/admin/produtos/novo',
  path: '/admin/produtos/novo',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminProdutosProdutoIdRoute =
  AdminAdminProdutosProdutoIdImport.update({
    id: '/admin/produtos/$produtoId',
    path: '/admin/produtos/$produtoId',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminAdminCategoriasNovoRoute = AdminAdminCategoriasNovoImport.update({
  id: '/admin/categorias/novo',
  path: '/admin/categorias/novo',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAdminCategoriasCategoriaIdRoute =
  AdminAdminCategoriasCategoriaIdImport.update({
    id: '/admin/categorias/$categoriaId',
    path: '/admin/categorias/$categoriaId',
    getParentRoute: () => AdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/carrinho': {
      id: '/_app/carrinho'
      path: '/carrinho'
      fullPath: '/carrinho'
      preLoaderRoute: typeof AppCarrinhoImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/categorias/$categoriaId': {
      id: '/_admin/admin/categorias/$categoriaId'
      path: '/admin/categorias/$categoriaId'
      fullPath: '/admin/categorias/$categoriaId'
      preLoaderRoute: typeof AdminAdminCategoriasCategoriaIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/categorias/novo': {
      id: '/_admin/admin/categorias/novo'
      path: '/admin/categorias/novo'
      fullPath: '/admin/categorias/novo'
      preLoaderRoute: typeof AdminAdminCategoriasNovoImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/produtos/$produtoId': {
      id: '/_admin/admin/produtos/$produtoId'
      path: '/admin/produtos/$produtoId'
      fullPath: '/admin/produtos/$produtoId'
      preLoaderRoute: typeof AdminAdminProdutosProdutoIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/produtos/novo': {
      id: '/_admin/admin/produtos/novo'
      path: '/admin/produtos/novo'
      fullPath: '/admin/produtos/novo'
      preLoaderRoute: typeof AdminAdminProdutosNovoImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/vendas/$vendaId': {
      id: '/_admin/admin/vendas/$vendaId'
      path: '/admin/vendas/$vendaId'
      fullPath: '/admin/vendas/$vendaId'
      preLoaderRoute: typeof AdminAdminVendasVendaIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/vendas/nova': {
      id: '/_admin/admin/vendas/nova'
      path: '/admin/vendas/nova'
      fullPath: '/admin/vendas/nova'
      preLoaderRoute: typeof AdminAdminVendasNovaImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/categorias/': {
      id: '/_admin/admin/categorias/'
      path: '/admin/categorias'
      fullPath: '/admin/categorias'
      preLoaderRoute: typeof AdminAdminCategoriasIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/produtos/': {
      id: '/_admin/admin/produtos/'
      path: '/admin/produtos'
      fullPath: '/admin/produtos'
      preLoaderRoute: typeof AdminAdminProdutosIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/_admin/admin/vendas/': {
      id: '/_admin/admin/vendas/'
      path: '/admin/vendas'
      fullPath: '/admin/vendas'
      preLoaderRoute: typeof AdminAdminVendasIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminAdminIndexRoute: typeof AdminAdminIndexRoute
  AdminAdminCategoriasCategoriaIdRoute: typeof AdminAdminCategoriasCategoriaIdRoute
  AdminAdminCategoriasNovoRoute: typeof AdminAdminCategoriasNovoRoute
  AdminAdminProdutosProdutoIdRoute: typeof AdminAdminProdutosProdutoIdRoute
  AdminAdminProdutosNovoRoute: typeof AdminAdminProdutosNovoRoute
  AdminAdminVendasVendaIdRoute: typeof AdminAdminVendasVendaIdRoute
  AdminAdminVendasNovaRoute: typeof AdminAdminVendasNovaRoute
  AdminAdminCategoriasIndexRoute: typeof AdminAdminCategoriasIndexRoute
  AdminAdminProdutosIndexRoute: typeof AdminAdminProdutosIndexRoute
  AdminAdminVendasIndexRoute: typeof AdminAdminVendasIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAdminIndexRoute: AdminAdminIndexRoute,
  AdminAdminCategoriasCategoriaIdRoute: AdminAdminCategoriasCategoriaIdRoute,
  AdminAdminCategoriasNovoRoute: AdminAdminCategoriasNovoRoute,
  AdminAdminProdutosProdutoIdRoute: AdminAdminProdutosProdutoIdRoute,
  AdminAdminProdutosNovoRoute: AdminAdminProdutosNovoRoute,
  AdminAdminVendasVendaIdRoute: AdminAdminVendasVendaIdRoute,
  AdminAdminVendasNovaRoute: AdminAdminVendasNovaRoute,
  AdminAdminCategoriasIndexRoute: AdminAdminCategoriasIndexRoute,
  AdminAdminProdutosIndexRoute: AdminAdminProdutosIndexRoute,
  AdminAdminVendasIndexRoute: AdminAdminVendasIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppCarrinhoRoute: typeof AppCarrinhoRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCarrinhoRoute: AppCarrinhoRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/carrinho': typeof AppCarrinhoRoute
  '/': typeof AppIndexRoute
  '/admin': typeof AdminAdminIndexRoute
  '/admin/categorias/$categoriaId': typeof AdminAdminCategoriasCategoriaIdRoute
  '/admin/categorias/novo': typeof AdminAdminCategoriasNovoRoute
  '/admin/produtos/$produtoId': typeof AdminAdminProdutosProdutoIdRoute
  '/admin/produtos/novo': typeof AdminAdminProdutosNovoRoute
  '/admin/vendas/$vendaId': typeof AdminAdminVendasVendaIdRoute
  '/admin/vendas/nova': typeof AdminAdminVendasNovaRoute
  '/admin/categorias': typeof AdminAdminCategoriasIndexRoute
  '/admin/produtos': typeof AdminAdminProdutosIndexRoute
  '/admin/vendas': typeof AdminAdminVendasIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/carrinho': typeof AppCarrinhoRoute
  '/': typeof AppIndexRoute
  '/admin': typeof AdminAdminIndexRoute
  '/admin/categorias/$categoriaId': typeof AdminAdminCategoriasCategoriaIdRoute
  '/admin/categorias/novo': typeof AdminAdminCategoriasNovoRoute
  '/admin/produtos/$produtoId': typeof AdminAdminProdutosProdutoIdRoute
  '/admin/produtos/novo': typeof AdminAdminProdutosNovoRoute
  '/admin/vendas/$vendaId': typeof AdminAdminVendasVendaIdRoute
  '/admin/vendas/nova': typeof AdminAdminVendasNovaRoute
  '/admin/categorias': typeof AdminAdminCategoriasIndexRoute
  '/admin/produtos': typeof AdminAdminProdutosIndexRoute
  '/admin/vendas': typeof AdminAdminVendasIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteRouteWithChildren
  '/_app': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/carrinho': typeof AppCarrinhoRoute
  '/_app/': typeof AppIndexRoute
  '/_admin/admin/': typeof AdminAdminIndexRoute
  '/_admin/admin/categorias/$categoriaId': typeof AdminAdminCategoriasCategoriaIdRoute
  '/_admin/admin/categorias/novo': typeof AdminAdminCategoriasNovoRoute
  '/_admin/admin/produtos/$produtoId': typeof AdminAdminProdutosProdutoIdRoute
  '/_admin/admin/produtos/novo': typeof AdminAdminProdutosNovoRoute
  '/_admin/admin/vendas/$vendaId': typeof AdminAdminVendasVendaIdRoute
  '/_admin/admin/vendas/nova': typeof AdminAdminVendasNovaRoute
  '/_admin/admin/categorias/': typeof AdminAdminCategoriasIndexRoute
  '/_admin/admin/produtos/': typeof AdminAdminProdutosIndexRoute
  '/_admin/admin/vendas/': typeof AdminAdminVendasIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/carrinho'
    | '/'
    | '/admin'
    | '/admin/categorias/$categoriaId'
    | '/admin/categorias/novo'
    | '/admin/produtos/$produtoId'
    | '/admin/produtos/novo'
    | '/admin/vendas/$vendaId'
    | '/admin/vendas/nova'
    | '/admin/categorias'
    | '/admin/produtos'
    | '/admin/vendas'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/carrinho'
    | '/'
    | '/admin'
    | '/admin/categorias/$categoriaId'
    | '/admin/categorias/novo'
    | '/admin/produtos/$produtoId'
    | '/admin/produtos/novo'
    | '/admin/vendas/$vendaId'
    | '/admin/vendas/nova'
    | '/admin/categorias'
    | '/admin/produtos'
    | '/admin/vendas'
  id:
    | '__root__'
    | '/_admin'
    | '/_app'
    | '/login'
    | '/_app/carrinho'
    | '/_app/'
    | '/_admin/admin/'
    | '/_admin/admin/categorias/$categoriaId'
    | '/_admin/admin/categorias/novo'
    | '/_admin/admin/produtos/$produtoId'
    | '/_admin/admin/produtos/novo'
    | '/_admin/admin/vendas/$vendaId'
    | '/_admin/admin/vendas/nova'
    | '/_admin/admin/categorias/'
    | '/_admin/admin/produtos/'
    | '/_admin/admin/vendas/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_app",
        "/login"
      ]
    },
    "/_admin": {
      "filePath": "_admin/route.tsx",
      "children": [
        "/_admin/admin/",
        "/_admin/admin/categorias/$categoriaId",
        "/_admin/admin/categorias/novo",
        "/_admin/admin/produtos/$produtoId",
        "/_admin/admin/produtos/novo",
        "/_admin/admin/vendas/$vendaId",
        "/_admin/admin/vendas/nova",
        "/_admin/admin/categorias/",
        "/_admin/admin/produtos/",
        "/_admin/admin/vendas/"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/carrinho",
        "/_app/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/carrinho": {
      "filePath": "_app/carrinho.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_admin/admin/": {
      "filePath": "_admin/admin/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/categorias/$categoriaId": {
      "filePath": "_admin/admin/categorias/$categoriaId.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/categorias/novo": {
      "filePath": "_admin/admin/categorias/novo.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/produtos/$produtoId": {
      "filePath": "_admin/admin/produtos/$produtoId.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/produtos/novo": {
      "filePath": "_admin/admin/produtos/novo.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/vendas/$vendaId": {
      "filePath": "_admin/admin/vendas/$vendaId.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/vendas/nova": {
      "filePath": "_admin/admin/vendas/nova.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/categorias/": {
      "filePath": "_admin/admin/categorias/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/produtos/": {
      "filePath": "_admin/admin/produtos/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/vendas/": {
      "filePath": "_admin/admin/vendas/index.tsx",
      "parent": "/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
